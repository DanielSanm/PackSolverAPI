// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PackSolverAPI.DbContexts;

#nullable disable

namespace PackSolverAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250530004009_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ProductsProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrdersOrderId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("PackSolverAPI.Models.Box", b =>
                {
                    b.Property<string>("BoxId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoxId");

                    b.ToTable("boxes");

                    b.HasData(
                        new
                        {
                            BoxId = "CAIXA_1",
                            Dimensions = "30x40x80"
                        },
                        new
                        {
                            BoxId = "CAIXA_2",
                            Dimensions = "80x50x40"
                        },
                        new
                        {
                            BoxId = "CAIXA_3",
                            Dimensions = "50x80x60"
                        });
                });

            modelBuilder.Entity("PackSolverAPI.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.HasKey("OrderId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("PackSolverAPI.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("PackSolverAPI.Models.ProductBox", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoxId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "BoxId");

                    b.HasIndex("BoxId");

                    b.HasIndex("OrderId");

                    b.ToTable("productBoxes");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("PackSolverAPI.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PackSolverAPI.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PackSolverAPI.Models.ProductBox", b =>
                {
                    b.HasOne("PackSolverAPI.Models.Box", "Box")
                        .WithMany()
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PackSolverAPI.Models.Order", "Order")
                        .WithMany("ProductBoxes")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PackSolverAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Box");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PackSolverAPI.Models.Order", b =>
                {
                    b.Navigation("ProductBoxes");
                });
#pragma warning restore 612, 618
        }
    }
}
